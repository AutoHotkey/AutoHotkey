<?xml version="1.0" encoding="utf-8"?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  
  <PropertyGroup>
  
    <!-- flags to make things easier -->
    <ConfigRelease>false</ConfigRelease>
    <ConfigDebug>false</ConfigDebug>
    <ConfigSC>false</ConfigSC>
    <ConfigMinSize>false</ConfigMinSize>
    <ConfigDll>false</ConfigDll>
    <ConfigRelease Condition="$(Configuration.Contains('Release'))">true</ConfigRelease>
    <ConfigDebug Condition="$(Configuration.Contains('ebug'))">true</ConfigDebug>
    <ConfigSC Condition="$(Configuration.Contains('Self-contained'))">true</ConfigSC>
    <ConfigDll Condition="$(Configuration.Contains('.dll'))">true</ConfigDll>
    
    <!-- CharacterSet may be set on command-line:
      MSBuild AutoHotkeyx.sln /p:Configuration=Release;CharacterSet=MultiByte -->
    <CharacterSet>Unicode</CharacterSet>
    <!-- Set default for '(mbcs)' configurations. Can also be overridden on command-line, but that wouldn't make sense. -->
    <CharacterSet Condition="$(Configuration.Contains('mbcs'))">MultiByte</CharacterSet>
    
    <!-- global setting -->
    <WholeProgramOptimization Condition="!$(ConfigDebug)">true</WholeProgramOptimization>
    <GenerateManifest>false</GenerateManifest>
    
  </PropertyGroup>
  <ItemDefinitionGroup>
    <ClCompile>
    
      <!-- pre-processor definition: NDEBUG/_DEBUG -->
      <PreprocessorDefinitions Condition="!$(ConfigDebug)">NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <PreprocessorDefinitions Condition=" $(ConfigDebug)">_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      
      <!-- global setting -->
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <WarningLevel>Level3</WarningLevel>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      
      <!-- default -->
      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
      
    </ClCompile>
  </ItemDefinitionGroup>
  
  <!-- misc optimizations -->
  <ItemDefinitionGroup Condition="!$(ConfigDebug)">
    <ClCompile>
      <Optimization>MaxSpeed</Optimization>
      <FavorSizeOrSpeed>Speed</FavorSizeOrSpeed>
      <OmitFramePointers>true</OmitFramePointers>
      <StringPooling>true</StringPooling>
      <ExceptionHandling></ExceptionHandling>
      <BufferSecurityCheck>false</BufferSecurityCheck>
      <AdditionalOptions Condition="$(PlatformToolsetVersion) &gt;= 140">/Zc:threadSafeInit- %(AdditionalOptions)</AdditionalOptions>
    </ClCompile>
    <Link> <!-- note linker settings don't apply to lib_pcre -->
      <GenerateDebugInformation>false</GenerateDebugInformation>
      <ProgramDatabaseFile></ProgramDatabaseFile>
      <OptimizeReferences>true</OptimizeReferences>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <!-- Disable this for now since numerous function signatures differ in Unicode vs ANSI builds.
        <FunctionOrder>source\misc\function_order_for_linker_optimization.txt</FunctionOrder>
        below: /IGNORE:4037
      -->
      <AdditionalOptions>/SAFESEH:NO %(AdditionalOptions)</AdditionalOptions>
    </Link>
  </ItemDefinitionGroup>
  <PropertyGroup>
    <LinkIncremental>false</LinkIncremental>
  </PropertyGroup>
  
  <!-- minimum size: dynamically-linked crt, favor size over speed -->
  <ItemDefinitionGroup Condition="$(ConfigMinSize)">
    <ClCompile>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <Optimization>MinSpace</Optimization>
      <FavorSizeOrSpeed>Size</FavorSizeOrSpeed>
    </ClCompile>
    <Link>
      <IgnoreSpecificDefaultLibraries>libcmt;%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
    </Link>
  </ItemDefinitionGroup>
  
  <!-- debug settings, defined last to override things set above -->
  <ItemDefinitionGroup Condition="$(ConfigDebug)">
    <ClCompile>
      <Optimization>Disabled</Optimization>
      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>
      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
    </ClCompile>
    <Link> <!-- note linker settings don't apply to lib_pcre -->
      <GenerateDebugInformation>true</GenerateDebugInformation>
    </Link>
  </ItemDefinitionGroup>
  
  <!-- import standard defaults -->
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />

  <!--
    VC++ 2010 and above all set PlatformToolset=v100 by default.  v100 produces smaller
    x86 (but not x64) binaries than v140 and is easier to target Win2k with, so use it
    if present.  Otherwise, try to fall back to an appropriate toolset.  Note that if
    VC++ Express 2010 is installed, there might be x86 compilers but no x64.
  -->
  <PropertyGroup Condition="'$(VCTargetsPath10)' == '' or !Exists('$(VCTargetsPath10)\Platforms\$(Platform)\Microsoft.Cpp.$(Platform).Targets')">
    <!-- DefaultPlatformToolset contains the toolset of the current VS in 2012+ -->
    <PlatformToolset Condition="'$(DefaultPlatformToolset)' != ''">$(DefaultPlatformToolset)</PlatformToolset>
    <PlatformToolset Condition="Exists('$(VCTargetsPath)\Platforms\$(Platform)\PlatformToolsets\$(PlatformToolset)_xp')">$(PlatformToolset)_xp</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup>
    <!-- Disable the upgrade prompt when first opening the project. -->
    <VCProjectUpgraderObjectName>NoUpgrade</VCProjectUpgraderObjectName>
  </PropertyGroup>

  <!-- import essential stuff -->
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="PropertySheets">
  <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" />
  </ImportGroup>
  
  <PropertyGroup>
    <SupportWin2k>false</SupportWin2k>
    <SupportWin2k Condition="'$(Platform)'=='Win32' AND $(PlatformToolsetVersion) &lt;= 100">true</SupportWin2k>
  </PropertyGroup>

</Project>
